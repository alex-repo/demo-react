apply plugin: "kotlin"
apply plugin: 'application'
apply plugin: org.springframework.boot.gradle.plugin.SpringBootPlugin

version = '0.0.1-SNAPSHOT'
description = """demo"""
mainClassName = "demo.ApplicationKt"

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    ext.kotlin_version = '1.1.0'
    ext.spring_version = '1.5.2.RELEASE'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$spring_version"
    }
}

dependencies {

    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    compile("org.springframework.boot:spring-boot-starter-web:$spring_version")

    testCompile("org.springframework.boot:spring-boot-starter-test:$spring_version") {
        exclude(module: 'commons-logging')
    }

    compile "edu.stanford.nlp:stanford-corenlp:3.7.0"
    compile "edu.stanford.nlp:stanford-corenlp:3.7.0:models"
}

repositories {
    mavenCentral()
}

task cleanAll(type: Delete, dependsOn: clean) {
    delete 'src/main/resources/static/bundle.js'
    delete 'docker/demo-0.0.1-SNAPSHOT.jar'
}

task rebuildAll(type: Exec) {
    args('run', 'build')
    executable('npm')
}

task dockerImage(type: Exec, dependsOn: rebuildAll) {
    args('alex/reactdemo')
    executable('./docker.sh')
}

//todo copy script
/*
docker save -o <save image to path> <image name>
scp -i ~/.ssh/id_rsa <save image to path> $ipAddress:/home/alex/
ssh $ipAddress docker load -i /home/alex/<path to image tar file>
*/